### This file was autogenerated by Nexus 0.11.3
### Do not make changes to this file directly


type AuthenticateUserPayload {
  token: String!
  user: User!
}

scalar DateTime

type Mutation {
  authenticate(
    """GitHub OAuth Token from the client."""
    githubCode: String!
  ): AuthenticateUserPayload
}

type Post {
  author: User!
  content: String!
  id: ID!
  published: Boolean!
  title: String!
}

enum PostOrderByInput {
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  published_ASC
  published_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input PostWhereInput {
  AND: [PostWhereInput!]
  author: UserWhereInput
  content: String
  content_contains: String
  content_ends_with: String
  content_gt: String
  content_gte: String
  content_in: [String!]
  content_lt: String
  content_lte: String
  content_not: String
  content_not_contains: String
  content_not_ends_with: String
  content_not_in: [String!]
  content_not_starts_with: String
  content_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  published: Boolean
  published_not: Boolean
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
}

type Query {
  feed: [Post!]!
  filterPosts(searchString: String!): [Post!]!
  viewer: Viewer
}

type User {
  avatarUrl: String
  bio: String!
  createdAt: DateTime!
  email: String
  githubHandle: String!
  githubUserId: String!
  id: ID!
  name: String!
  posts(after: String, before: String, first: Int, last: Int, orderBy: PostOrderByInput, skip: Int, where: PostWhereInput): [Post!]
  updatedAt: DateTime!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  avatarUrl: String
  avatarUrl_contains: String
  avatarUrl_ends_with: String
  avatarUrl_gt: String
  avatarUrl_gte: String
  avatarUrl_in: [String!]
  avatarUrl_lt: String
  avatarUrl_lte: String
  avatarUrl_not: String
  avatarUrl_not_contains: String
  avatarUrl_not_ends_with: String
  avatarUrl_not_in: [String!]
  avatarUrl_not_starts_with: String
  avatarUrl_starts_with: String
  bio: String
  bio_contains: String
  bio_ends_with: String
  bio_gt: String
  bio_gte: String
  bio_in: [String!]
  bio_lt: String
  bio_lte: String
  bio_not: String
  bio_not_contains: String
  bio_not_ends_with: String
  bio_not_in: [String!]
  bio_not_starts_with: String
  bio_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  githubHandle: String
  githubHandle_contains: String
  githubHandle_ends_with: String
  githubHandle_gt: String
  githubHandle_gte: String
  githubHandle_in: [String!]
  githubHandle_lt: String
  githubHandle_lte: String
  githubHandle_not: String
  githubHandle_not_contains: String
  githubHandle_not_ends_with: String
  githubHandle_not_in: [String!]
  githubHandle_not_starts_with: String
  githubHandle_starts_with: String
  githubUserId: String
  githubUserId_contains: String
  githubUserId_ends_with: String
  githubUserId_gt: String
  githubUserId_gte: String
  githubUserId_in: [String!]
  githubUserId_lt: String
  githubUserId_lte: String
  githubUserId_not: String
  githubUserId_not_contains: String
  githubUserId_not_ends_with: String
  githubUserId_not_in: [String!]
  githubUserId_not_starts_with: String
  githubUserId_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  posts_every: PostWhereInput
  posts_none: PostWhereInput
  posts_some: PostWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Viewer {
  id: ID!
  user: User!
}
